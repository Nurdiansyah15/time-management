# Database Configuration
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:time_energy}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.driver-class-name=org.postgresql.Driver

# OAuth2 Properties
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:526758495987-csdtvm8auobu5h00p5avme7rjo32c286.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE:email,profile}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}

# Custom OAuth2 settings
app.oauth2.authorizedRedirectUris=${APP_OAUTH2_REDIRECT_URIS:http://localhost:8080/oauth2/redirect,http://localhost:5173/oauth2/redirect,http://localhost:3000/oauth2/redirect,http://localhost:8080/swagger-ui/oauth2-redirect.html}
app.oauth2.redirectUri=${APP_OAUTH2_REDIRECT_URI:http://10.10.103.25:5173/oauth2/redirect}

# JWT Configuration
app.jwt.secret=${JWT_SECRET:atleast32byteslongsecretneedstobe1234}
app.jwt.expirationInMs=${JWT_EXPIRATION_MS:360000000}
app.jwt.refreshExpirationInMs=${JWT_REFRESH_EXPIRATION_MS:86400000}
app.jwt.secretRefresh=${JWT_SECRET_REFRESH:atleast32byteslongsecretneedstobe12345}

# Logging Configuration
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${LOGGING_LEVEL_SPRING_WEB:DEBUG}
logging.level.org.springframework.data.jpa=${LOGGING_LEVEL_SPRING_DATA_JPA:DEBUG}
logging.level.org.springframework.security=${LOGGING_LEVEL_SPRING_SECURITY:DEBUG}
logging.level.org.springframework.security.oauth2=${LOGGING_LEVEL_SPRING_SECURITY_OAUTH2:DEBUG}
logging.level.org.springframework.boot.autoconfigure=${LOGGING_LEVEL_SPRING_BOOT_AUTO:DEBUG}
logging.level.com.tunduh.timemanagement=${LOGGING_LEVEL_TUNDUH:DEBUG}
logging.pattern.console=${LOGGING_PATTERN_CONSOLE:%d{yyyy-MM-dd HH:mm:ss} - %msg%n}

# Server Configuration
server.port=${SERVER_PORT:8080}

# CORS Configuration
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000,http://localhost:8080,http://10.10.103.227:8080}

# Swagger UI OAuth Configuration
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=${SWAGGER_OAUTH_PKCE:true}
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=${SWAGGER_OAUTH_BASIC_AUTH:true}
springdoc.swagger-ui.oauth.client-id=${SWAGGER_CLIENT_ID:526758495987-csdtvm8auobu5h00p5avme7rjo32c286.apps.googleusercontent.com}
springdoc.swagger-ui.oauth.client-secret=${SWAGGER_CLIENT_SECRET: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}
springdoc.swagger-ui.oauth.scopes=${SWAGGER_OAUTH_SCOPES:email,profile}
springdoc.swagger-ui.oauth2-redirect-url=${SWAGGER_OAUTH2_REDIRECT_URL:http://localhost:8080/swagger-ui/oauth2-redirect.html}
springdoc.swagger-ui.persistAuthorization=${SWAGGER_PERSIST_AUTH:true}
spring.servlet.multipart.enabled=${MULTIPART_ENABLED:true}
spring.servlet.multipart.max-file-size=${MULTIPART_MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MULTIPART_MAX_REQUEST_SIZE:10MB}

# OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=${GOOGLE_AUTHORIZATION_URI:https://accounts.google.com/o/oauth2/v2/auth}
spring.security.oauth2.client.provider.google.token-uri=${GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
spring.security.oauth2.client.provider.google.user-info-uri=${GOOGLE_USER_INFO_URI:https://www.googleapis.com/oauth2/v3/userinfo}
spring.security.oauth2.client.provider.google.user-name-attribute=${GOOGLE_USER_NAME_ATTRIBUTE:sub}

# Live Reload
spring.devtools.restart.poll-interval=${DEVTOOLS_POLL_INTERVAL:2s}
spring.devtools.restart.quiet-period=${DEVTOOLS_QUIET_PERIOD:1s}

# Cloudinary
cloudinary.api.key=${CLOUDINARY_API_KEY:416476111913111}
cloudinary.api.secret=${CLOUDINARY_API_SECRET:eZBrEsFvXJfb-N2rVqWfnczug_w}
cloudinary.key.name=${CLOUDINARY_KEY_NAME:amlkhrn}
